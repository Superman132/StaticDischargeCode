update code with the latest changes from the common code from patent pending code, there are and will be big fixes in
the code you share with william, so refresh this with all those changes. February 8th 2020

some changes have been made to this repository but not to the old ftcrobotics one because those changes involved new stuff with the 5.4 ftc update, like bulk reading from rev expansion hub in roadrunner



extra code:
//    // turn with gyro, speed should be positive
//    fun turn(orientation: Double) {
//        while (Math.abs(headingError(orientation)) > 0.02 && opMode.opModeIsActive()) {
//            telemetry.addData("Gyro Sensor", "turning")
//            telemetry.addData("Angle", gyro.measure())
//            telemetry.update()
//            val turn = Range.clip(-headingError(orientation) * gyroAdjust, -1.0, 1.0)
//            driveTrain.start(DriveTrain.Vector(0.0, 0.0, turn).speeds())
//        }
//        driveTrain.start(DriveTrain.Vector(0.0, 0.0, 0.0).speeds())
//    }
//
//    // drive with distance, ORIENTATION IS ONLY FOR KEEPING A HEADING, NOT FOR GOING TO A HEADING
//    fun drive(hori: Double, vert: Double, target: Double, orientation: Double, far: Boolean) {
//        while (if (far) distance.measure() < target else distance.measure() > target && opMode.opModeIsActive()) {
//            telemetry.addData("Distance Sensor", "driving")
//            telemetry.addData("Distance", distance.measure())
//            telemetry.addData("head error:", -headingError(orientation))
//            telemetry.update()
//            val turn = Range.clip(-headingError(orientation) * gyroAdjust, -1.0, 1.0)
//            driveTrain.start(DriveTrain.Vector(hori, vert, turn).speeds())
//        }
//        driveTrain.start(DriveTrain.Vector(0.0, 0.0, 0.0).speeds())
//    }
//
//    // drive with encoders
//    fun move(hori: Double, vert: Double) {
//        telemetry.addData("Encoders", "moving")
//        telemetry.addData("Horizontal", hori)
//        telemetry.addData("Vertical", vert)
//        telemetry.update()
//        driveTrain.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER)
//
//
//        driveTrain.setTarget(DriveTrain.Direction(hori, -vert, 0.0).speeds())
//        driveTrain.setMode(DcMotor.RunMode.RUN_TO_POSITION)
//
//        driveTrain.start(DriveTrain.Square(0.8, 0.8, 0.8, 0.8))
//
//        // do gyro adjustment in here |
//        //                            v
//        while (driveTrain.isBusy && opMode.opModeIsActive()) {
//        }
//        //turn (-headingError(angle)) * gyroAdjust)
//        driveTrain.start(DriveTrain.Square(0.0, 0.0, 0.0, 0.0))
//        driveTrain.setMode(DcMotor.RunMode.RUN_USING_ENCODER)
//    }
//
//    // get current offset from target orientation
//    fun headingError(orientation: Double): Double {
//        var rawError = orientation - gyro.measure()
//        if (rawError < -0.5) {
//            rawError += 1.0
//        }
//        if (rawError > 0.5) {
//            rawError -= 1.0
//        }
//        return rawError
//    }